//Arithmetic_operators
#include <stdio.h>

int main() {
  int x = 5;
  int y = 3;
  printf("%d\n", x + y);
  printf("%d\n", x - y);
  printf("%d\n", x * y);	
  printf("%d\n", x / y);
  printf("%d\n", x % y);
  printf("%d\n", ++x);
  printf("%d\n", --x);

  //Assignment Operator:

  int x = 5;
  printf("%d\n", x);
  x <<= 3;
  printf("%d\n", x);
  x >>= 3;
  printf("%d\n", x);
  x ^= 3;
  printf("%d\n", x);
  x |= 3;
  printf("%d\n", x);
   x &= 3;
  printf("%d\n", x);
   x %= 3;
  printf("%d\n", x);
  x *= 3;
  printf("%d\n", x);
  x -= 3;
  printf("%d\n", x);
   x += 3;
  printf("%d\n", x);
   float x1 = 5;
  x1 /= 3;
  printf("%f\n", x1);

  //Comparison Operator

  int x = 5;
  int y = 3;
  
  // Returns 0 (false) because 5 is neither less than or equal to 3
  printf("%d\n", x <= y);
  
  // Returns 1 (true) because five is greater than, or equal, to 3
  printf("%d\n", x >= y);
  
  printf("%d\n", x < y); // returns 0 (false) because 5 is not less than 3
  
  printf("%d\n", x > y); // returns 1 (true) because 5 is greater than 3
   
  printf("%d\n", x != y); // returns 1 (true) because 5 is not equal to 3
     
  printf("%d\n", x == y); // returns 0 (false) because 5 is not equal to 3
 
  //Logical Operator:
  
  int x = 5;
  int y = 3;
  
  // Returns 1 (true) because 5 is greater than 3 AND 5 is less than 10
  printf("%d\n", x > 3 && x < 10);
  
    // Returns 1 (true) because one of the conditions are true (5 is greater than 3, but 5 is not less than 4)
  printf("%d\n", x > 3 || x < 4);
  
    // Returns false (0) because ! (not) is used to reverse the result
  printf("%d\n", !(x > 3 && x < 10));
  return 0;
}
